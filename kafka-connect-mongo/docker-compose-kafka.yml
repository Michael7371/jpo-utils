services:
  kafka:
    image: bitnami/kafka:latest
    hostname: kafka
    restart: ${RESTART_POLICY}
    ports:
      - "9092:9092"
    volumes:
      - kafka:/bitnami
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9094,CONTROLLER://:9093,EXTERNAL://:9092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9094,EXTERNAL://${DOCKER_HOST_IP}:9092"
      KAFKA_BROKER_ID: "1"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_DELETE_TOPIC_ENABLE: "true"
      KAFKA_CFG_LOG_RETENTION_HOURS: 2
    logging:
      options:
        max-size: "10m"  
        max-file: "5"
  
  kafka_init:
    image: bitnami/kafka:latest
    depends_on:
      kafka:
        condition: service_started
    volumes:
      - ./scripts/kafka/kafka_init.sh:/kafka_init.sh
    entrypoint: ["/bin/sh", "kafka_init.sh"]

  # Not needed for this example, but useful for future reference 
  # schema-registry:
  #   image: confluentinc/cp-schema-registry:latest
  #   hostname: schema-registry
  #   depends_on:
  #     - kafka
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     SCHEMA_REGISTRY_HOST_NAME: schema-registry
  #     SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: ${DOCKER_HOST_IP}:9092
  #     SCHEMA_REGISTRY_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
  #     SCHEMA_REGISTRY_AVRO_COMPATIBILITY_LEVEL: "NONE"
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8081/subjects"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 4

  kafbat-ui:
    hostname: kafka-ui
    image: ghcr.io/kafbat/kafka-ui:latest
    restart: ${RESTART_POLICY}
    ports:
      - 8001:8080
    depends_on:
      - kafka
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: ${DOCKER_HOST_IP}:9092

volumes:
  kafka: