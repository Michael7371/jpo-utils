version: '3'

include:
  - docker-compose-kafka.yml
  - docker-compose-mongo.yml

services:
  kafka-connect:
    image: jpo-kafka-connect-mongo
    build:
      context: images/kafka-connect-mongo
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      MONGO_URI: ${MONGO_URI}
      MONGO_DB_NAME: ${MONGO_DB_NAME}
      CONNECT_BOOTSTRAP_SERVERS: ${DOCKER_HOST_IP}:9092
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: topic.kafka-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_CONFIG_STORAGE_CLEANUP_POLICY: compact
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: topic.kafka-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_CLEANUP_POLICY: compact
      CONNECT_STATUS_STORAGE_TOPIC: topic.kafka-connect-status
      CONNECT_STATUS_STORAGE_CLEANUP_POLICY: compact
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_LOG4J_ROOT_LOGLEVEL: ${LOG_LEVEL}
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=${LOG_LEVEL},org.reflections=${LOG_LEVEL},com.mongodb.kafka=${LOG_LEVEL}"
      CONNECT_PLUGIN_PATH: /usr/share/confluent-hub-components